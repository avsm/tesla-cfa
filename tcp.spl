function tcp_process() {
    either {
      Net_Rx_FIN;
      Net_Tx_ACK;
      Assign_pcb_tstate_CLOSE_WAIT;
      Invoke_app_close;
      Net_Tx_FIN;
      Assign_pcb_tstate_LAST_ACK;
      either { Net_Rx_FINACK; } or { Invoke_timeout; }
    } or {
      Invoke_app_close;
      Net_Tx_FIN;
      Assign_pcb_tstate_FIN_WAIT_1;
      either {
        Net_Rx_FIN;
        Net_Tx_ACK;
        Assign_pcb_tstate_CLOSING;
        Net_Rx_FINACK;
        Assign_pcb_tstate_TIME_WAIT;
     } or {
        Net_Rx_FIN_ACK;
        Assign_pcb_tstate_FIN_WAIT_2;
        Net_Rx_FIN;
        Net_Tx_ACK;
        Assign_pcb_tstate_TIME_WAIT;
      }
      Invoke_timeout_2MSL;
    } or {
      Net_Rx_RST;
    }
    Invoke_free_tcb;  /* -> CLOSED */
}

automaton tcp_create(bool established) {
  Invoke_pru_attach;
  Assign_pcb_tstate_CLOSED;
  either {
    Invoke_pru_accept;
    Assign_pcb_tstate_LISTEN;
    Net_Rx_SYN;
    Invoke_malloc_tcb;           /* Alloc new pcb */
    do {
      Net_Tx_SYNACK;
      Assign_pcb_tstate_SYN_RCVED;
      either {
        Net_Rx_RST;
        Assign_pcb_tstate_LISTEN;
        Invoke_free_tcb;
      } or {
        established=true; 
        tcp_process();
      }
    } until (established);
  } or {
    Invoke_app_connect;
    Net_Tx_SYN; 
    Assign_pcb_tstate_SYN_SENT;
    either {
      either { Invoke_timeout; } or { Invoke_app_close; }
      Invoke_free_tcb;
    } or {
      Net_Rx_SYNACK;
      Net_Tx_ACK; 
      tcp_process();
    }
  }
}
